{"version":3,"sources":["services/getDataFromAPI.js","components/CharacterCard/CharacterCard.js","components/Filters/FilterEmtpy.js","components/CharacterList/CharacterList.js","services/Loader.js","components/Filters/Filters.js","images/Rick_and_Morty_-_logo_(English).png","components/CharacterDetail/Details.js","components/CharacterDetail/CharacterNotFound.js","components/CharacterDetail/CharacterDetail.js","App.js","font/get_schwifty.ttf","index.js"],"names":["getDataFromAPI","fetch","then","response","json","data","results","map","character","name","id","image","episodes","episode","length","status","species","origin","CharacterCard","props","info","to","style","textDecoration","color","className","src","alt","title","FilterEmpty","console","log","CharacterList","ListIsEmpty","Loader","Filters","onSubmit","ev","preventDefault","type","placeholder","value","onChange","handleFilter","target","Details","CharacterNotFound","CharacterDetail","Logo","text","App","useState","isLoading","setLoading","setData","filterValue","setFilterValue","useEffect","filterData","filter","toUpperCase","includes","sort","charA","charB","width","dataFilter","exact","path","render","characterClicked","find","char","parseInt","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f156fdbe.chunk.js","sourcesContent":["const ENDPOINT =\n  \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\nconst getDataFromAPI = () => {\n  return fetch(ENDPOINT)\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((character) => {\n        return {\n          name: character.name,\n          id: character.id,\n          image: character.image,\n          episodes: character.episode.length,\n          status: character.status,\n          species: character.species,\n          origin: character.origin.name,\n        };\n      });\n    });\n};\n\nexport default getDataFromAPI;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./CharacterCard.scss\";\nconst CharacterCard = (props) => {\n  const { name, id, image, species } = props.info;\n\n  return (\n    <Link\n      to={`/detail/${id}`}\n      style={{ textDecoration: \"none\", color: \"inherit\" }}\n    >\n      <img\n        className=\"item__card--img\"\n        src={image}\n        alt={`Foto de ${name}`}\n        title={`Foto de ${name}`}\n      />\n      <div className=\"item__card--texts\">\n        <h4 className=\"item__card--title\">{name}</h4>\n        <p className=\"item__card--description\">{species}</p>\n      </div>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  /* handleFilter: PropTypes.func.isRequired, */\n  info: PropTypes.object.isRequired,\n};\n\nexport default CharacterCard;\n","import \"./FilterEmpty.scss\";\n\nconst FilterEmpty = () => {\n  console.log(\"filter empty\");\n  return <p className=\"filter__error\">¿¿¿¿Ese quién es???</p>;\n};\nexport default FilterEmpty;\n","import PropTypes from \"prop-types\";\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\nimport FilterEmpty from \"../Filters/FilterEmtpy\";\nimport \"./CharacterList.scss\";\n\nconst CharacterList = (props) => {\n  let ListIsEmpty = false;\n  if (props.data.length === 0) {\n    ListIsEmpty = true;\n  }\n  return ListIsEmpty ? (\n    <FilterEmpty />\n  ) : (\n    <section className=\"section-Characters\">\n      <ul className=\"section-Characters__list\">\n        {props.data.map((character) => {\n          return (\n            <li className=\"section-Characters__list__card\" key={character.id}>\n              <CharacterCard info={character} />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CharacterList;\n","import React from \"react\";\n\nimport \"./Loader.scss\";\n\nconst Loader = () => {\n  return <div className=\"loading\">Loading</div>;\n};\nexport default Loader;\n","import \"./Filters.scss\";\n\nconst Filters = (props) => {\n  const handleFilter = (ev) => {\n    props.handleFilter(ev.target.value);\n  };\n\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  };\n  return (\n    <form className=\"section__filter\" onSubmit={handleFormSubmit}>\n      <input\n        className=\"section__filter__input\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"¿a quién buscas?\"\n        value={props.value}\n        onChange={handleFilter}\n      ></input>\n    </form>\n  );\n};\nexport default Filters;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","function Details(props) {\n  const { episodes, origin, status, name, id, image, species } = props.info;\n  return (\n    <div className=\"detail__character\">\n      <img\n        className=\"detail__character--img\"\n        src={image}\n        alt={`Foto de ${name}`}\n        title={`Foto de ${name}`}\n      />\n      <div className=\"detail__character--texts\">\n        <h3 className=\"detail__card--title\">{name}</h3>\n        <ul>\n          <li>\n            <span className=\"bold\">Status: </span>\n            {status}\n          </li>\n          <li>\n            <span className=\"bold\">Species: </span>\n            {species}\n          </li>\n          <li>\n            <span className=\"bold\">Origin: </span>\n            {origin}\n          </li>\n          <li>\n            <span className=\"bold\">Episodes: </span>\n            {episodes}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default Details;\n","function CharacterNotFound() {\n  return (\n    <div className=\"detail__character\">\n      <h3 className=\"detail__card--title\">Character Not Found</h3>\n    </div>\n  );\n}\nexport default CharacterNotFound;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./CharacterDetail.scss\";\nimport Logo from \"../../images/Rick_and_Morty_-_logo_(English).png\";\nimport Details from \"./Details.js\";\nimport CharacterNotFound from \"./CharacterNotFound\";\n\nconst CharacterDetail = (props) => {\n  console.log(props.info);\n\n  return (\n    <article className=\"detail\">\n      <img className=\"detail__title\" src={Logo} alt=\"Logo Rick and Morty\"></img>\n      <div className=\"detail__card\">\n        <Link to=\"./\" className=\"detail__card__button\">\n          {\"< \"}\n          Volver{\" \"}\n        </Link>\n        {!!props.info ? (\n          <Details info={props.info} />\n        ) : (\n          <CharacterNotFound text=\"Character not Found\" />\n        )}\n      </div>\n    </article>\n  );\n};\n\nCharacterDetail.propTypes = {\n  /* handleFilter: PropTypes.func.isRequired, */\n  info: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;\n","import \"./App.scss\";\nimport { Route } from \"react-router-dom\";\nimport getDataFromAPI from \"./services/getDataFromAPI\";\nimport { useEffect, useState } from \"react\";\nimport CharacterList from \"./components/CharacterList/CharacterList\";\nimport Loader from \"./services/Loader\";\nimport Filters from \"./components/Filters/Filters\";\nimport CharacterDetail from \"./components/CharacterDetail/CharacterDetail\";\nimport Logo from \"./images/Rick_and_Morty_-_logo_(English).png\";\n\nfunction App() {\n  //variables estado\n  const [isLoading, setLoading] = useState(true); //true while APi is fetching\n  const [data, setData] = useState([]); // empty since API return data\n  // const [filterData, setFilterData] = useState();\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  //GET DATA\n  useEffect(() => {\n    getDataFromAPI().then((data) => {\n      setData(data);\n      setLoading(false);\n    });\n    return;\n  }, []);\n\n  //HANDLEFILTER\n  const handleFilter = (dataFilter) => {\n    setFilterValue(dataFilter);\n  };\n\n  //handleCharacterDetail\n  const handleCharacterDetail = (props) => {\n    const characterClicked = data.find((char) => {\n      return char.id === parseInt(props.match.params.id);\n    });\n    return <CharacterDetail info={characterClicked} />;\n  };\n\n  //filtrado de datos con info del filtro y ordenación\n  const filterData = data\n    .filter((character) => {\n      return character.name.toUpperCase().includes(filterValue.toUpperCase());\n    })\n    .sort((charA, charB) => {\n      if (charA.name > charB.name) {\n        return 1;\n      }\n      if (charA.name < charB.name) {\n        return -1;\n      }\n      // charA must be equal to charB\n      return 0;\n    });\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Rick and Morty</h1>\n      <img style={{ width: \"50%\" }} src={Logo} alt=\"Logo Rick and Morty\"></img>\n      <Filters value={filterValue} handleFilter={handleFilter} />\n      {isLoading ? <Loader /> : <CharacterList data={filterData} />}\n      <Route exact path=\"/detail/:id\" render={handleCharacterDetail} />\n      {/* <Route path=\"/detail/\" component={Loader} /> */}\n    </div>\n  );\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/get_schwifty.c3d1dfc6.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./font/get_schwifty.ttf\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}