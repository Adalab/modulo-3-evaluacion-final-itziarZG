{"version":3,"sources":["services/getDataFromAPI.js","components/CharacterCard/CharacterCard.js","components/Filters/FilterEmtpy.js","components/CharacterList/CharacterList.js","services/Loader.js","components/Filters/FilterName.js","components/Filters/FilterSort.js","components/Filters/Filters.js","images/Rick_and_Morty_-_logo_(English).png","components/CharacterDetail/Details.js","components/CharacterDetail/CharacterNotFound.js","components/CharacterDetail/CharacterDetail.js","App.js","font/get_schwifty.ttf","index.js"],"names":["getDataFromAPI","fetch","then","response","json","data","results","map","character","name","id","image","episodes","episode","length","status","species","origin","CharacterCard","props","info","to","style","textDecoration","color","className","src","alt","title","FilterEmpty","CharacterList","ListIsEmpty","Loader","FilterName","type","placeholder","value","onChange","ev","handleFilter","target","FilterSort","handleFilterSort","checked","Filters","Fragment","onSubmit","preventDefault","Details","CharacterNotFound","CharacterDetail","Logo","text","App","useState","isLoading","setLoading","setData","filterValue","setFilterValue","checkedSort","setCheckedSort","useEffect","filterData","filter","toUpperCase","includes","sortedData","sort","charA","charB","width","dataFilter","exact","path","render","characterClicked","find","char","parseInt","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4a41febe.chunk.js","sourcesContent":["const ENDPOINT =\n  \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\nconst getDataFromAPI = () => {\n  return fetch(ENDPOINT)\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((character) => {\n        return {\n          name: character.name,\n          id: character.id,\n          image: character.image,\n          episodes: character.episode.length,\n          status: character.status,\n          species: character.species,\n          origin: character.origin.name,\n        };\n      });\n    });\n};\n\nexport default getDataFromAPI;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./CharacterCard.scss\";\n\nconst CharacterCard = (props) => {\n  //my vars\n  const { name, id, image, species } = props.info;\n\n  return (\n    <Link\n      to={`/detail/${id}`}\n      style={{ textDecoration: \"none\", color: \"inherit\" }}\n    >\n      <img\n        className=\"item__card--img\"\n        src={image}\n        alt={`Foto de ${name}`}\n        title={`Foto de ${name}`}\n      />\n      <div className=\"item__card--texts\">\n        <h4 className=\"item__card--title\">{name}</h4>\n        <p className=\"item__card--description\">{species}</p>\n      </div>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  info: PropTypes.object.isRequired,\n};\n\nexport default CharacterCard;\n","import \"./FilterEmpty.scss\";\n\nconst FilterEmpty = () => {\n  return <p className=\"filter__error\">¿¿¿¿Ese quién es???</p>;\n};\nexport default FilterEmpty;\n","import PropTypes from \"prop-types\";\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\nimport FilterEmpty from \"../Filters/FilterEmtpy\";\nimport \"./CharacterList.scss\";\n\nconst CharacterList = (props) => {\n  //array can be empty if there's no character with that name.\n  let ListIsEmpty = false;\n  if (props.data.length === 0) {\n    ListIsEmpty = true;\n  }\n  return ListIsEmpty ? (\n    <FilterEmpty />\n  ) : (\n    <section className=\"section-Characters\">\n      <ul className=\"section-Characters__list\">\n        {props.data.map((character) => {\n          return (\n            <li className=\"section-Characters__list__card\" key={character.id}>\n              <CharacterCard info={character} />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CharacterList;\n","import React from \"react\";\n\nimport \"./Loader.scss\";\n\nconst Loader = () => {\n  return <div className=\"loading\">Loading</div>;\n};\nexport default Loader;\n","import \"./Filters.scss\";\nimport PropTypes from \"prop-types\";\n\nconst FilterName = (props) => {\n  //lifting with input value\n  const handleFilter = (ev) => {\n    props.handleFilter(ev.target.value);\n  };\n\n  return (\n    <input\n      className=\"section__filter__input\"\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"¿a quién buscas?\"\n      value={props.value}\n      onChange={handleFilter}\n    ></input>\n  );\n};\n\nFilterName.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default FilterName;\n","import \"./Filters.scss\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst FilterSort = (props) => {\n  function handleChange(ev) {\n    props.handleFilterSort(ev.target.checked);\n  }\n  return (\n    <div className=\"section__filter__sort\">\n      <input type=\"checkbox\" name=\"sort\" onChange={handleChange}></input>\n      <label className=\"section__filter__label\">Sort by Name</label>\n    </div>\n  );\n};\n\nFilterSort.propTypes = {\n  handleFilterSort: PropTypes.func.isRequired,\n};\n\nexport default FilterSort;\n","import \"./Filters.scss\";\nimport PropTypes from \"prop-types\";\nimport FilterName from \"./FilterName\";\nimport FilterSort from \"./FilterSort\";\nimport React from \"react\";\n\nconst Filters = (props) => {\n  //prevent reload\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  };\n  return (\n    <React.Fragment>\n      <form className=\"section__filter\" onSubmit={handleFormSubmit}>\n        <FilterName value={props.value} handleFilter={props.handleFilter} />\n        <FilterSort\n          handleFilterSort={props.handleFilterSort}\n          checked={props.checked}\n        />\n      </form>\n    </React.Fragment>\n  );\n};\n\nFilters.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  handleFilter: PropTypes.func.isRequired,\n  handleFilterSort: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n};\n\nexport default Filters;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","import PropTypes from \"prop-types\";\n\nfunction Details(props) {\n  const { episodes, origin, status, name, image, species } = props.info;\n  return (\n    <div className=\"detail__character\">\n      <img\n        className=\"detail__character--img\"\n        src={image}\n        alt={`Foto de ${name}`}\n        title={`Foto de ${name}`}\n      />\n      <div className=\"detail__character--texts\">\n        <h3 className=\"detail__card--title\">{name}</h3>\n        <ul>\n          <li>\n            <span className=\"bold\">Status: </span>\n            {status}\n          </li>\n          <li>\n            <span className=\"bold\">Species: </span>\n            {species}\n          </li>\n          <li>\n            <span className=\"bold\">Origin: </span>\n            {origin}\n          </li>\n          <li>\n            <span className=\"bold\">Episodes: </span>\n            {episodes}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default Details;\n\nDetails.propTypes = {\n  info: PropTypes.object,\n};\n","function CharacterNotFound() {\n  return (\n    <div className=\"detail__character\">\n      <h3 className=\"detail__card--title\">Character Not Found</h3>\n    </div>\n  );\n}\nexport default CharacterNotFound;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./CharacterDetail.scss\";\nimport Logo from \"../../images/Rick_and_Morty_-_logo_(English).png\";\nimport Details from \"./Details.js\";\nimport CharacterNotFound from \"./CharacterNotFound\";\n\nconst CharacterDetail = (props) => {\n  return (\n    <article className=\"detail\">\n      <img className=\"detail__title\" src={Logo} alt=\"Logo Rick and Morty\"></img>\n      <div className=\"detail__card\">\n        <Link to=\"/\" className=\"detail__card__button\">\n          {\"< \"}\n          Volver{\" \"}\n        </Link>\n        {!!props.info ? (\n          <Details info={props.info} />\n        ) : (\n          <CharacterNotFound text=\"Character not Found\" />\n        )}\n      </div>\n    </article>\n  );\n};\n\nCharacterDetail.propTypes = {\n  info: PropTypes.object,\n};\n\nexport default CharacterDetail;\n","import \"./App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromAPI from \"./services/getDataFromAPI\";\nimport { useEffect, useState } from \"react\";\nimport CharacterList from \"./components/CharacterList/CharacterList\";\nimport Loader from \"./services/Loader\";\nimport Filters from \"./components/Filters/Filters\";\nimport CharacterDetail from \"./components/CharacterDetail/CharacterDetail\";\nimport Logo from \"./images/Rick_and_Morty_-_logo_(English).png\";\n\nfunction App() {\n  //STATE VARS\n  const [isLoading, setLoading] = useState(true); //true while APi is fetching\n  const [data, setData] = useState([]); // empty since API return data\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [checkedSort, setCheckedSort] = useState(false);\n\n  //GET DATA\n  useEffect(() => {\n    getDataFromAPI().then((data) => {\n      setData(data);\n      setLoading(false);\n    });\n    return;\n  }, []);\n\n  //HANDLEFILTER NAME\n  const handleFilter = (dataFilter) => {\n    setFilterValue(dataFilter);\n  };\n\n  //HANDLEFILTER SORT\n  const handleFilterSort = (checked) => {\n    if (checked) setCheckedSort(true);\n    else setCheckedSort(false);\n  };\n\n  //HANDLE URL CHARACTER DETAIL\n  const handleCharacterDetail = (props) => {\n    const characterClicked = data.find((char) => {\n      return char.id === parseInt(props.match.params.id);\n    });\n    return <CharacterDetail info={characterClicked} />;\n  };\n\n  // FILTER CHARACTER AND SORT LIST BEFORE PAINTING\n  const filterData = data.filter((character) => {\n    return character.name.toUpperCase().includes(filterValue.toUpperCase());\n  });\n  const sortedData = checkedSort\n    ? filterData.sort((charA, charB) => {\n        if (charA.name > charB.name) {\n          return 1;\n        }\n        if (charA.name < charB.name) {\n          return -1;\n        }\n        // charA must be equal to charB\n        return 0;\n      })\n    : filterData;\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Rick and Morty</h1>\n      <img style={{ width: \"50%\" }} src={Logo} alt=\"Logo Rick and Morty\"></img>\n      <Filters\n        value={filterValue}\n        handleFilter={handleFilter}\n        handleFilterSort={handleFilterSort}\n        checked={checkedSort}\n      />\n      <Switch>\n        <Route exact path=\"/\">\n          {isLoading ? <Loader /> : <CharacterList data={sortedData} />}\n        </Route>\n        <Route exact path=\"/detail/:id\" render={handleCharacterDetail} />\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/get_schwifty.c3d1dfc6.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./font/get_schwifty.ttf\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}